---
- hosts: web
  become: yes

  # ===== パスワード入力のルール =====
  # 優先度: 1) -e mysql_root_password=...  2) 環境変数 MYSQL_ROOT_PW  3) 対話プロンプト
  pre_tasks:
    - name: Use env var if provided
      set_fact:
        mysql_root_password: "{{ lookup('env','MYSQL_ROOT_PW') }}"
      when: mysql_root_password is not defined and lookup('env','MYSQL_ROOT_PW') | length > 0

    - name: Prompt for MySQL root password (hidden)
      pause:
        prompt: "Enter MySQL root password"
        echo: no
      register: pw_prompt
      when: mysql_root_password is not defined and (lookup('env','MYSQL_ROOT_PW') | length == 0)

    - name: Set mysql_root_password from prompt
      set_fact:
        mysql_root_password: "{{ pw_prompt.user_input }}"
      when: mysql_root_password is not defined and pw_prompt is defined

    - name: Sanity check - ensure password is set
      assert:
        that:
          - mysql_root_password is defined
          - mysql_root_password | length >= 8
        fail_msg: "mysql_root_password が未設定か短すぎます（8文字以上を推奨）"

    - name: Update apt cache
      apt:
        update_cache: yes

  tasks:
    - name: Install Apache, MariaDB, PHP (no extra collections)
      apt:
        name:
          - apache2
          - mariadb-server
          - php
          - php-mysql
          - libapache2-mod-php
        state: present

    - name: Enable & start services
      systemd:
        name: "{{ item }}"
        enabled: yes
        state: started
      loop:
        - apache2
        - mariadb

    # 低メモリ向けMariaDBチューニング（任意）
    - name: Ensure MySQL config dir exists
      file:
        path: /etc/mysql/conf.d
        state: directory
        mode: '0755'

    - name: Drop-in low memory my.cnf
      copy:
        dest: /etc/mysql/conf.d/lowmem.cnf
        content: |
          [mysqld]
          innodb_buffer_pool_size=64M
          innodb_log_file_size=64M
          max_connections=40
          table_open_cache=200
      notify: Restart MySQL

    # ===== ここから「mysqlコマンド」で安全に初期化（コレクション不要） =====
    - name: Set MySQL root password for localhost (switch from unix_socket)
      shell: |
        mysql --protocol=socket -u root <<'SQL'
        ALTER USER 'root'@'localhost' IDENTIFIED BY '{{ mysql_root_password }}';
        FLUSH PRIVILEGES;
        SQL
      args:
        creates: /root/.mysql_root_password_set
      register: set_root_pw
      changed_when: set_root_pw.rc == 0
      failed_when: false
      no_log: true

    - name: Mark root password set
      file:
        path: /root/.mysql_root_password_set
        state: touch
      when: set_root_pw.rc == 0

    - name: Remove anonymous users
      shell: |
        mysql -uroot -p'{{ mysql_root_password }}' -e "DELETE FROM mysql.user WHERE user=''; FLUSH PRIVILEGES;"
      no_log: true

    - name: Disallow root remote login (drop non-localhost root)
      shell: |
        mysql -uroot -p'{{ mysql_root_password }}' <<'SQL'
        DROP USER IF EXISTS 'root'@'%';
        DROP USER IF EXISTS 'root'@'::1';
        DROP USER IF EXISTS 'root'@'127.0.0.1';
        FLUSH PRIVILEGES;
        SQL
      no_log: true

    - name: Remove test database
      shell: |
        mysql -uroot -p'{{ mysql_root_password }}' <<'SQL'
        DROP DATABASE IF EXISTS test;
        DELETE FROM mysql.db WHERE Db='test' OR Db LIKE 'test\_%';
        FLUSH PRIVILEGES;
        SQL
      no_log: true

    - name: Create sample index.php
      copy:
        dest: /var/www/html/index.php
        content: |
          <?php phpinfo();

    - name: Disable ufw if present (NSGで制御前提)
      ufw:
        state: disabled
      ignore_errors: yes

  handlers:
    - name: Restart MySQL
      systemd:
        name: mariadb
        state: restarted
